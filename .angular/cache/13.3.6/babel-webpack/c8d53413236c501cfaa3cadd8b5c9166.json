{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/login-services.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/core/storage.service\";\nimport * as i4 from \"@angular/router\";\nexport let LoginPageComponent = /*#__PURE__*/(() => {\n  class LoginPageComponent {\n    constructor(loginService, fb, storageService, router) {\n      this.loginService = loginService;\n      this.fb = fb;\n      this.storageService = storageService;\n      this.router = router;\n      this.loginForm = this.fb.group({\n        correo: ['', Validators.required],\n        password: ['', Validators.required]\n      });\n    }\n\n    ngOnInit() {}\n\n    submit() {\n      this.loginService.login(this.loginForm.value).subscribe(data => this.completedLogIn(data), error => {\n        console.error('error caught in component', error);\n        alert(\"Autenticación Fallida\");\n      });\n      console.log(this.loginForm.value);\n    }\n\n    completedLogIn(data) {\n      this.storageService.setStorageItem({\n        key: \"isAuth\",\n        value: \"true\",\n        storageArea: \"localStorage\"\n      });\n      this.storageService.setStorageItem({\n        key: \"username\",\n        value: this.loginForm.controls['correo'].value.split(\"@\")[0],\n        storageArea: \"localStorage\"\n      });\n      this.storageService.setStorageItem({\n        key: \"token_access\",\n        value: data.access,\n        storageArea: \"localStorage\"\n      });\n      this.storageService.setStorageItem({\n        key: \"token_refresh\",\n        value: data.refresh,\n        storageArea: \"localStorage\"\n      });\n      alert(\"Autenticación Exitosa\");\n      this.router.navigate(['home']).then(this.refresh);\n    }\n\n    refresh() {\n      window.location.reload();\n    }\n\n  }\n\n  LoginPageComponent.ɵfac = function LoginPageComponent_Factory(t) {\n    return new (t || LoginPageComponent)(i0.ɵɵdirectiveInject(i1.LoginServicesService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.StorageService), i0.ɵɵdirectiveInject(i4.Router));\n  };\n\n  LoginPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginPageComponent,\n    selectors: [[\"app-login-page\"]],\n    decls: 12,\n    vars: 2,\n    consts: [[1, \"container\"], [1, \"card-login\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"inputEmail\"], [\"type\", \"text\", \"placeholder\", \"Ej: juanRodriguez@gmail.com\", \"id\", \"inputEmail\", \"formControlName\", \"correo\"], [\"for\", \"inputContrasena\"], [\"type\", \"password\", \"placeholder\", \"Escribe tu contrase\\u00F1a\", \"id\", \"inputContrasena\", \"formControlName\", \"password\"], [\"type\", \"submit\", \"value\", \"Iniciar\", 3, \"disabled\"]],\n    template: function LoginPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginPageComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\", 3);\n        i0.ɵɵtext(4, \"Correo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 2)(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Contrase\\u00F1a\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 2);\n        i0.ɵɵelement(11, \"input\", 7);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n      }\n    },\n    directives: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName],\n    styles: [\".container[_ngcontent-%COMP%]{display:flex;background-image:url(/assets/cafetales12.jpg);background-repeat:no-repeat;background-size:cover;height:800px;align-content:center;justify-content:center;align-items:center}.card-login[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;align-items:center;height:400px;width:400px;gap:30px;background-color:#fdfdfdb0}.form-group[_ngcontent-%COMP%]{width:300px}\"]\n  });\n  return LoginPageComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}