{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let InterceptorInterceptor = /*#__PURE__*/(() => {\n  class InterceptorInterceptor {\n    constructor(router) {\n      this.router = router;\n    }\n\n    intercept(req, next) {\n      const request = req.clone();\n      return next.handle(request).pipe(retry(1), catchError(err => {\n        if (err.status === 401) {\n          localStorage.clear();\n          alert(\"Vuelva a iniciar sesión\");\n\n          if (this.router.url == '/login/login' || this.router.url == '/') {} else {\n            this.router.navigate(['/login/login']).then(this.refresh);\n          }\n        }\n\n        return throwError(err);\n      }));\n    }\n\n    refresh() {\n      window.location.reload();\n    }\n\n  }\n\n  InterceptorInterceptor.ɵfac = function InterceptorInterceptor_Factory(t) {\n    return new (t || InterceptorInterceptor)(i0.ɵɵinject(i1.Router));\n  };\n\n  InterceptorInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InterceptorInterceptor,\n    factory: InterceptorInterceptor.ɵfac\n  });\n  return InterceptorInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}