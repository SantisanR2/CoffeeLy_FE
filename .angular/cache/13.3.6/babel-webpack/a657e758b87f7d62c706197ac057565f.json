{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/rest.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../../shared/nav-empresa/nav-empresa/nav-empresa.component\";\nimport * as i5 from \"@angular/common\";\n\nfunction CreateTostionComponent_option_64_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 38);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const objeto_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", objeto_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\"\", objeto_r1.marca, \"-\", objeto_r1.modelo, \" #\", objeto_r1.id, \"\");\n  }\n}\n\nexport let CreateTostionComponent = /*#__PURE__*/(() => {\n  class CreateTostionComponent {\n    constructor(RestService, fb, router) {\n      this.RestService = RestService;\n      this.fb = fb;\n      this.router = router;\n      this.url_createTostion = '/tostion/';\n      this.url_maquinas = '/maquina/All';\n      this.url_viewLote = \"/lote/\";\n      this.url_updateLote = \"/lote/update/\";\n      this.id_lote = localStorage.getItem(\"lote\");\n      this.lista = [];\n      this.tostionForm = this.fb.group({\n        fecha: new FormControl('', [Validators.required]),\n        cantidadEntra: new FormControl('', [Validators.required]),\n        cantidadSale: new FormControl('', [Validators.required]),\n        tempInicio: new FormControl('', [Validators.required]),\n        tiempo1: new FormControl('', [Validators.required]),\n        temp1: new FormControl('', [Validators.required]),\n        tiempo2: new FormControl('', [Validators.required]),\n        temp2: new FormControl('', [Validators.required]),\n        tiempoPromedio: new FormControl('', [Validators.required]),\n        tempPromedio: new FormControl('', [Validators.required]),\n        aromas: new FormControl('', [Validators.required]),\n        agtron: new FormControl('', [Validators.required]),\n        tipo: new FormControl('', [Validators.required]),\n        curva: new FormControl('', [Validators.required]),\n        maquina: new FormControl('', [Validators.required]),\n        lote: new FormControl(),\n        user: new FormControl()\n      });\n    }\n\n    ngOnInit() {\n      this.RestService.get(this.url_maquinas).subscribe(lista => {\n        this.lista = lista;\n      });\n    }\n\n    info() {\n      Swal.fire({\n        html: ' <ul align=\"left\"> <li> <b> Fecha </b>: Es la fecha y hora a la que empieza la tostión. </li><br>' + ' <li>Entrada: Es la cantidad de masa que entra al proceso, en kg. </li><br>' + ' <li>Salida: Es la cantidad de masa que sale del proceso, en kg. </li><br>' + ' <li>Temp. Ingreso: Temperatura del grano antes de entrar al tostado, se reporta en °C. </li><br>' + ' <li>Tiempo 1: Tiempo del primer crack, reportado en minutos. </li><br>' + ' <li>Temp. 1: Temperatura del primer crack, en °C. </li><br>' + ' <li>Tiempo 2: Tiempo del segundo crack, reportado en minutos. </li><br>' + ' <li>Temp. 2: Temperatura del segundo crack, en °C. </li><br>' + ' <li>Tiempo prom.: Tiempo promedio por bache, reportado en minutos. </li><br>' + ' <li>Temp prom.: Temperatura promedio por bache. </li><br>' + ' <li># batches: Número de baches usados. </li><br>' + ' <li>Agtron: Medida de la SCA para el tueste del grano, entre 25-45 Oscuro. </li><br>' + ' <li>Aromas: Selección de aromas de la SCA, separados por comas. </li> <br>' + ' <li>Curva: Documento PDF o imagen en el que se registra la curva de tostión. </li><br>',\n        background: '#282726',\n        color: '#C29F42',\n        showConfirmButton: true,\n        heightAuto: true,\n        width: 'auto',\n        imageUrl: '../../../../assets/info.png',\n        imageHeight: '100px',\n        scrollbarPadding: false\n      });\n    }\n\n    submit() {\n      this.crearTostion();\n      this.router.navigate(['inicio/empresa']);\n    }\n\n    crearTostion() {\n      var _a, _b;\n\n      (_a = this.tostionForm.get('lote')) === null || _a === void 0 ? void 0 : _a.setValue(Number(this.id_lote));\n      (_b = this.tostionForm.get('user')) === null || _b === void 0 ? void 0 : _b.setValue(Number(localStorage.getItem('user_id')));\n      this.RestService.post(this.url_createTostion, this.tostionForm.value).subscribe(data => {});\n      this.updateLote();\n    }\n\n    updateLote() {\n      this.RestService.get(this.url_viewLote + this.id_lote).subscribe(data => {\n        console.log(data);\n        data.estado = \"Tostado\";\n        this.RestService.post(this.url_updateLote + this.id_lote, data).subscribe(resp => {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'top-end',\n            showConfirmButton: false,\n            timer: 5000,\n            background: '#282726',\n            color: '#C29F42'\n          });\n          Toast.fire({\n            icon: 'success',\n            title: 'Tostión registrada correctamente'\n          });\n        });\n      });\n    }\n\n  }\n\n  CreateTostionComponent.ɵfac = function CreateTostionComponent_Factory(t) {\n    return new (t || CreateTostionComponent)(i0.ɵɵdirectiveInject(i1.RestService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  CreateTostionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateTostionComponent,\n    selectors: [[\"app-create-tostion\"]],\n    decls: 71,\n    vars: 2,\n    consts: [[1, \"contenedor\"], [1, \"titulo\"], [1, \"contenedor-2\"], [1, \"formulario\"], [1, \"card-tostion\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"inputDate1\"], [\"type\", \"datetime-local\", \"id\", \"inputDate1\", \"formControlName\", \"fecha\"], [\"for\", \"inputEntrada\"], [\"type\", \"number\", \"step\", \"any\", \"min\", \"0\", \"placeholder\", \"0 (kg)\", \"id\", \"inputEntrada\", \"formControlName\", \"cantidadEntra\"], [\"for\", \"inputSalida\"], [\"type\", \"number\", \"step\", \"any\", \"min\", \"0\", \"placeholder\", \"0 (kg)\", \"id\", \"inputSalida\", \"formControlName\", \"cantidadSale\"], [\"for\", \"inputTempInicio\"], [\"type\", \"number\", \"step\", \"any\", \"min\", \"0\", \"placeholder\", \"0 (\\u00B0C)\", \"id\", \"inputTempInicio\", \"formControlName\", \"tempInicio\"], [\"for\", \"inputTiempo1\"], [\"type\", \"number\", \"id\", \"inputTiempo1\", \"placeholder\", \"0 (min)\", \"formControlName\", \"tiempo1\"], [\"for\", \"inputTamb\"], [\"type\", \"number\", \"step\", \"any\", \"min\", \"0\", \"placeholder\", \"60 (\\u00B0C)\", \"id\", \"inputTemp1\", \"formControlName\", \"temp1\"], [\"for\", \"inputTiempo2\"], [\"type\", \"number\", \"step\", \"any\", \"min\", \"0\", \"id\", \"inputTiempo2\", \"placeholder\", \"0 (min)\", \"formControlName\", \"tiempo2\"], [\"for\", \"inputTemp2\"], [\"type\", \"number\", \"step\", \"any\", \"min\", \"0\", \"placeholder\", \"100 (\\u00B0C)\", \"id\", \"inputtem`\", \"formControlName\", \"temp2\"], [\"for\", \"inputTiempoPromedio\"], [\"type\", \"number\", \"step\", \"any\", \"min\", \"0\", \"id\", \"inputTiempoPromedio\", \"placeholder\", \"0 (min)\", \"formControlName\", \"tiempoPromedio\"], [\"for\", \"inputTempPromedio\"], [\"type\", \"number\", \"step\", \"any\", \"min\", \"0\", \"placeholder\", \"100 (\\u00B0C)\", \"id\", \"inputTempPromedio\", \"formControlName\", \"tempPromedio\"], [\"for\", \"inputAgtron\"], [\"type\", \"number\", \"placeholder\", \"0-100\", \"min\", \"0\", \"max\", \"100\", \"id\", \"inputAgtron\", \"formControlName\", \"agtron\"], [\"for\", \"inputAromas\"], [\"type\", \"text\", \"placeholder\", \"Amargo, frambuesa, chocolate...\", \"id\", \"inputAromas\", \"formControlName\", \"aromas\"], [\"for\", \"inputCurva\"], [\"type\", \"file\", \"accept\", \"image/*,.pdf\", \"id\", \"inputCurva\", \"formControlName\", \"curva\"], [\"for\", \"inputMaquina\"], [\"name\", \"miselect\", \"id\", \"inputMaquina\", \"formControlName\", \"maquina\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"src\", \"../../../../assets/info.png\", 1, \"boton\", 3, \"click\"], [1, \"submit-group\"], [\"type\", \"submit\", \"value\", \"Ingresar\"], [3, \"ngValue\"]],\n    template: function CreateTostionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"header\");\n        i0.ɵɵelement(1, \"app-nav-empresa\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"h1\", 1);\n        i0.ɵɵtext(4, \" Tosti\\u00F3n \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 2)(6, \"div\", 3)(7, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateTostionComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(8, \"div\", 5)(9, \"label\", 6);\n        i0.ɵɵtext(10, \"Fecha\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 5)(13, \"label\", 8);\n        i0.ɵɵtext(14, \"Entrada\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 5)(17, \"label\", 10);\n        i0.ɵɵtext(18, \"Salida\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 5)(21, \"label\", 12);\n        i0.ɵɵtext(22, \"Temp. Ingreso\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 5)(25, \"label\", 14);\n        i0.ɵɵtext(26, \"Tiempo 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 5)(29, \"label\", 16);\n        i0.ɵɵtext(30, \"Temp. 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"input\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 5)(33, \"label\", 18);\n        i0.ɵɵtext(34, \"Tiempo 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(35, \"input\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"div\", 5)(37, \"label\", 20);\n        i0.ɵɵtext(38, \"Temp. 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"input\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"div\", 5)(41, \"label\", 22);\n        i0.ɵɵtext(42, \"Tiempo prom.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(43, \"input\", 23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"div\", 5)(45, \"label\", 24);\n        i0.ɵɵtext(46, \"Temp. prom.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(47, \"input\", 25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"div\", 5)(49, \"label\", 26);\n        i0.ɵɵtext(50, \" Agtron \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(51, \"input\", 27);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"div\", 5)(53, \"label\", 28);\n        i0.ɵɵtext(54, \" Aromas \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(55, \"input\", 29);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"div\", 5)(57, \"label\", 30);\n        i0.ɵɵtext(58, \" Curva \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(59, \"input\", 31);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"div\", 5)(61, \"label\", 32);\n        i0.ɵɵtext(62, \" M\\u00E1quina \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(63, \"select\", 33);\n        i0.ɵɵtemplate(64, CreateTostionComponent_option_64_Template, 2, 4, \"option\", 34);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(65, \"div\", 5)(66, \"p\");\n        i0.ɵɵtext(67, \" + \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(68, \"img\", 35);\n        i0.ɵɵlistener(\"click\", function CreateTostionComponent_Template_img_click_68_listener() {\n          return ctx.info();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(69, \"div\", 36);\n        i0.ɵɵelement(70, \"input\", 37);\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.tostionForm);\n        i0.ɵɵadvance(57);\n        i0.ɵɵproperty(\"ngForOf\", ctx.lista);\n      }\n    },\n    directives: [i4.NavEmpresaComponent, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName, i2.MinValidator, i2.NumberValueAccessor, i2.MaxValidator, i2.SelectControlValueAccessor, i5.NgForOf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption],\n    styles: [\".contenedor[_ngcontent-%COMP%]{display:flex;background-color:var(--coffeLy);background-repeat:no-repeat;background-size:cover;align-content:center;flex-direction:column;align-items:center;padding-top:5vh;gap:5vh;min-width:100vw;min-height:100vh;padding-bottom:10vh}.titulo[_ngcontent-%COMP%]{background-size:cover;font-family:Basker;text-align:center;color:#c29f42}.contenedor-2[_ngcontent-%COMP%]{display:flex;background-repeat:no-repeat;background-size:cover;align-content:space-evenly;flex-direction:column;align-items:center;gap:5vh;padding:50px 0;max-width:90vw;background-color:#94949433;height:auto}.formulario[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;gap:4vh}.card-tostion[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:center;flex-wrap:wrap;align-items:center;width:inherit;min-width:-moz-fit-content;min-width:fit-content;gap:4vw;color:#c29f42;padding:20px}.submit-group[_ngcontent-%COMP%]{position:relative}.boton[_ngcontent-%COMP%]{width:30px;height:30px;cursor:pointer}.form-group[_ngcontent-%COMP%]{display:flex;flex-direction:column}div[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{-webkit-user-select:none;user-select:none;visibility:hidden}input[_ngcontent-%COMP%]   text[_ngcontent-%COMP%]{width:auto}form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{margin:.5em}div[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{margin:.5em;outline:.1em solid #C29F42;width:-moz-fit-content;width:fit-content;text-align:center}\"]\n  });\n  return CreateTostionComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}